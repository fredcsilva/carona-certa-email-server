Comandos para inicializar:
Api do servidor de e-mail:
# Na pasta onde est√° o package.json
# Testar servidor
npm run dev

# Em outro terminal, testar health
curl http://localhost:3000/health

# Testar envio de email de verifica√ß√£o
curl -X POST http://localhost:3000/email/verificacao \
  -H "Content-Type: application/json" \
  -d '{
    "email": "fredcsilva@gmail.com",
    "name": "Fred",
    "link": "https://exemplo.com/verify?token=abc123"
  }'
--------------
Comandos PM2:

# Iniciar em produ√ß√£o
pm2 start ecosystem.config.cjs --env production

# Ver status
pm2 status

# Ver logs em tempo real
pm2 logs servidor-email

# Parar
pm2 stop servidor-email

# Reiniciar
pm2 restart servidor-email

# Deletar do PM2
pm2 delete servidor-email

# Salvar configura√ß√£o para reiniciar ap√≥s reboot
pm2 save
pm2 startup
--------------
Iniciar em produ√ß√£o
pm2 start ecosystem.config.cjs --env production

docker-compose up -d
--------------

Aplica√ß√£o web:
# Na pasta onde est√° o send_mail.html
npx http-server -p 8080

##################################################
import { Resend } from 'resend';

const resend = new Resend('re_UcCKgFoj_8QafSrEmoxzWwU4pK2HswFaJ');

resend.emails.send({
  from: 'onboarding@resend.dev',
  to: 'fredcsilva@gmail.com',
  subject: 'Hello World',
  html: '<p>Congrats on sending your <strong>first email</strong>!</p>'
});

-----------------

resend: https://resend.com/ (fredcsilva@gmail.com)
api key: re_UcCKgFoj_8QafSrEmoxzWwU4pK2HswFaJ
------------------

üìù Resumo do que voc√™ construiu:
‚úÖ Servidor Node.js com Express
‚úÖ Integra√ß√£o com Resend (3.000 emails/m√™s gr√°tis)
‚úÖ 3 tipos de emails prontos:

Boas-vindas
Recupera√ß√£o de senha
Notifica√ß√µes customizadas

‚úÖ Templates HTML bonitos e responsivos
‚úÖ Interface de teste funcional
üöÄ Pr√≥ximos passos (quando quiser):
1. Verificar seu dom√≠nio (para emails profissionais)

Adicionar os registros DNS no caronacerta.com.br
Mudar EMAIL_FROM para contato@caronacerta.com.br

---

Verificar dom√≠nio (para depois): https://resend.com/docs/dashboard/domains/introduction
Quando quiser usar seu dom√≠nio caronacerta.com.br de verdade, voc√™ precisa:
1. No Resend:

Acesse: https://resend.com/domains
Clique em "Add Domain"
Digite: caronacerta.com.br

2. Voc√™ receber√° 3 registros DNS:
Exemplo do que o Resend vai te dar:
Tipo: TXT
Nome: @ ou caronacerta.com.br
Valor: v=spf1 include:_spf.resend.com ~all

Tipo: TXT  
Nome: resend._domainkey
Valor: (uma string longa com a chave DKIM)

Tipo: TXT
Nome: _dmarc
Valor: v=DMARC1; p=none;
3. Adicionar no seu provedor de dom√≠nio:
Voc√™ precisa entrar no painel onde gerencia o dom√≠nio caronacerta.com.br (Registro.br, Hostinger, GoDaddy, etc.) e adicionar esses 3 registros na zona DNS.
4. Aguardar verifica√ß√£o (15min a 48h)
O Resend vai verificar automaticamente. Quando estiver OK, aparecer√° "Verified" ‚úÖ

=====

üöÄ Pr√≥ximos passos (quando quiser):
1. Verificar seu dom√≠nio (para emails profissionais)

Adicionar os registros DNS no caronacerta.com.br
Mudar EMAIL_FROM para contato@caronacerta.com.br

2. Integrar com sua aplica√ß√£o real
Exemplo de uso no seu backend:
javascript// No seu cadastro de usu√°rios
app.post('/api/cadastro', async (req, res) => {
  const { nome, email, senha } = req.body;
  
  // Salva usu√°rio no banco...
  const usuario = await criarUsuario({ nome, email, senha });
  
  // Envia email (ass√≠ncrono, n√£o bloqueia)
  fetch('http://localhost:3000/email/boas-vindas', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ nome, email })
  }).catch(err => console.error('Erro ao enviar email:', err));
  
  res.json({ sucesso: true });
});
3. Melhorias futuras:

Adicionar fila de emails (Bull/BullMQ)
Log de emails enviados
Retry autom√°tico em caso de falha
Templates mais personalizados
Vari√°veis de ambiente para diferentes ambientes (dev/prod)

4. Colocar em produ√ß√£o:

Hospedar o servidor (Heroku, Railway, Render, VPS)
Usar vari√°veis de ambiente seguras
Monitorar taxa de entrega no painel do Resend

üí° Dica importante:
Guarde bem sua API Key do Resend - nunca commite ela no Git! Use sempre .env e adicione no .gitignore:
# .gitignore
node_modules/
.env